require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe ApplicsController do

  def mock_applic(stubs={})
    @mock_applic ||= mock_model(Applic, stubs).as_null_object
  end

  describe "GET index" do
    it "assigns all applics as @applics" do
      Applic.stub(:all) { [mock_applic] }
      get :index
      assigns(:applics).should eq([mock_applic])
    end
  end

  describe "GET show" do
    it "assigns the requested applic as @applic" do
      Applic.stub(:find).with("37") { mock_applic }
      get :show, :id => "37"
      assigns(:applic).should be(mock_applic)
    end
  end

  describe "GET new" do
    it "assigns a new applic as @applic" do
      Applic.stub(:new) { mock_applic }
      get :new
      assigns(:applic).should be(mock_applic)
    end
  end

  describe "GET edit" do
    it "assigns the requested applic as @applic" do
      Applic.stub(:find).with("37") { mock_applic }
      get :edit, :id => "37"
      assigns(:applic).should be(mock_applic)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created applic as @applic" do
        Applic.stub(:new).with({'these' => 'params'}) { mock_applic(:save => true) }
        post :create, :applic => {'these' => 'params'}
        assigns(:applic).should be(mock_applic)
      end

      it "redirects to the created applic" do
        Applic.stub(:new) { mock_applic(:save => true) }
        post :create, :applic => {}
        response.should redirect_to(applic_url(mock_applic))
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved applic as @applic" do
        Applic.stub(:new).with({'these' => 'params'}) { mock_applic(:save => false) }
        post :create, :applic => {'these' => 'params'}
        assigns(:applic).should be(mock_applic)
      end

      it "re-renders the 'new' template" do
        Applic.stub(:new) { mock_applic(:save => false) }
        post :create, :applic => {}
        response.should render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested applic" do
        Applic.stub(:find).with("37") { mock_applic }
        mock_applic.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :applic => {'these' => 'params'}
      end

      it "assigns the requested applic as @applic" do
        Applic.stub(:find) { mock_applic(:update_attributes => true) }
        put :update, :id => "1"
        assigns(:applic).should be(mock_applic)
      end

      it "redirects to the applic" do
        Applic.stub(:find) { mock_applic(:update_attributes => true) }
        put :update, :id => "1"
        response.should redirect_to(applic_url(mock_applic))
      end
    end

    describe "with invalid params" do
      it "assigns the applic as @applic" do
        Applic.stub(:find) { mock_applic(:update_attributes => false) }
        put :update, :id => "1"
        assigns(:applic).should be(mock_applic)
      end

      it "re-renders the 'edit' template" do
        Applic.stub(:find) { mock_applic(:update_attributes => false) }
        put :update, :id => "1"
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested applic" do
      Applic.stub(:find).with("37") { mock_applic }
      mock_applic.should_receive(:destroy)
      delete :destroy, :id => "37"
    end

    it "redirects to the applics list" do
      Applic.stub(:find) { mock_applic }
      delete :destroy, :id => "1"
      response.should redirect_to(applics_url)
    end
  end

end
